//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Webbed.Scripting.Interop
{
    // DEBUG: typedef struct _WebKitDOMEventTargetIface WebKitDOMEventTargetIface
    // DEBUG: struct _WebKitDOMEventTargetIface { GTypeInterface gIface; /* virtual table */ void (* dispatch_event)(WebKitDOMEventTarget *target, WebKitDOMEvent *event, GError **error); gboolean (* add_event_listener)(WebKitDOMEventTarget *target, const char *eventName, GCallback handler, gboolean bubble, gpointer userData); gboolean (* remove_event_listener)(WebKitDOMEventTarget *target, const char *eventName, GCallback handler, gboolean bubble);}
    [StructLayout(LayoutKind.Explicit, Size = 20)]
    public unsafe struct _WebKitDOMEventTargetIface
    {
        // DEBUG: GTypeInterface gIface
        [FieldOffset(0)]
        public _GTypeInterface gIface;

        // DEBUG: void (* dispatch_event)(WebKitDOMEventTarget *target, WebKitDOMEvent *event, GError **error)
        [FieldOffset(8)]
        public global::System.IntPtr dispatch_event;

        // DEBUG: gboolean (* add_event_listener)(WebKitDOMEventTarget *target, const char *eventName, GCallback handler, gboolean bubble, gpointer userData)
        [FieldOffset(12)]
        public global::System.IntPtr add_event_listener;

        // DEBUG: gboolean (* remove_event_listener)(WebKitDOMEventTarget *target, const char *eventName, GCallback handler, gboolean bubble)
        [FieldOffset(16)]
        public global::System.IntPtr remove_event_listener;
    }

    public unsafe partial class WebKitDOMEventTarget: GLib.Object
    {
        public WebKitDOMEventTarget(IntPtr handle) : base(handle) { }
        // DEBUG: WEBKIT_API GType webkit_dom_event_target_get_type(void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_dom_event_target_get_type")]
        internal static extern uint webkit_dom_event_target_get_type();

        public GLib.GType Type
        {
            get
            {
                return new GLib.GType((IntPtr)webkit_dom_event_target_get_type());
            }
        }

        // DEBUG: WEBKIT_API void webkit_dom_event_target_dispatch_event(WebKitDOMEventTarget *target, WebKitDOMEvent *event, GError **error)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_dom_event_target_dispatch_event")]
        internal static extern void webkit_dom_event_target_dispatch_event(global::System.IntPtr target, global::System.IntPtr @event, global::System.IntPtr error);

        // DEBUG: WEBKIT_API gboolean webkit_dom_event_target_add_event_listener(WebKitDOMEventTarget *target, const char *eventName, GCallback handler, gboolean bubble, gpointer userData)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_dom_event_target_add_event_listener")]
        internal static extern int webkit_dom_event_target_add_event_listener(global::System.IntPtr target, global::System.IntPtr eventName, global::System.IntPtr handler, int bubble, void* userData);

        // DEBUG: WEBKIT_API gboolean webkit_dom_event_target_remove_event_listener(WebKitDOMEventTarget *target, const char *eventName, GCallback handler, gboolean bubble)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_dom_event_target_remove_event_listener")]
        internal static extern int webkit_dom_event_target_remove_event_listener(global::System.IntPtr target, global::System.IntPtr eventName, global::System.IntPtr handler, int bubble);
    }
}
