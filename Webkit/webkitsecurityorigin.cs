//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Webbed.Scripting.Interop
{
    // DEBUG: typedef struct _WebKitSecurityOriginPrivate WebKitSecurityOriginPrivate
    // DEBUG: struct _WebKitSecurityOriginPrivate
    [StructLayout(LayoutKind.Explicit, Size = 0)]
    public unsafe struct _WebKitSecurityOriginPrivate
    {
    }

    // DEBUG: struct _WebKitSecurityOrigin { GObject parent_instance; /*< private >*/ WebKitSecurityOriginPrivate* priv;}
    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public unsafe struct _WebKitSecurityOrigin
    {
        // DEBUG: GObject parent_instance
        [FieldOffset(0)]
        public _GObject parent_instance;

        // DEBUG: WebKitSecurityOriginPrivate* priv
        [FieldOffset(12)]
        public global::System.IntPtr priv;
    }

    // DEBUG: struct _WebKitSecurityOriginClass { GObjectClass parent_class; /* Padding for future expansion */ void (*_webkit_reserved1) (void); void (*_webkit_reserved2) (void); void (*_webkit_reserved3) (void); void (*_webkit_reserved4) (void);}
    [StructLayout(LayoutKind.Explicit, Size = 84)]
    public unsafe struct _WebKitSecurityOriginClass
    {
        // DEBUG: GObjectClass parent_class
        [FieldOffset(0)]
        public _GObjectClass parent_class;
    }

    public unsafe partial class WebKitSecurityOrigin :GLib.Object
    {
        public WebKitSecurityOrigin (IntPtr handle) : base(handle){}
        // DEBUG: WEBKIT_API GTypewebkit_security_origin_get_type (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_security_origin_get_type")]
        internal static extern uint webkit_security_origin_get_type();

        public GLib.GType Type
        {
            get
            {
                return new GLib.GType((IntPtr)webkit_security_origin_get_type());
            }
        }

        // DEBUG: WEBKIT_API const gchar*webkit_security_origin_get_protocol (WebKitSecurityOrigin* securityOrigin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet=CharSet.Ansi
            EntryPoint="webkit_security_origin_get_protocol")]
        internal static extern string webkit_security_origin_get_protocol(global::System.IntPtr securityOrigin);

        public string Protocol{
        
            get{
                return webkit_security_origin_get_protocol(this.Handle);
        }
        }

        // DEBUG: WEBKIT_API const gchar*webkit_security_origin_get_host (WebKitSecurityOrigin* securityOrigin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_security_origin_get_host")]
        internal static extern string webkit_security_origin_get_host(global::System.IntPtr securityOrigin);

        public string Host{
            get{
                return webkit_security_origin_get_host(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API guintwebkit_security_origin_get_port (WebKitSecurityOrigin* securityOrigin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_security_origin_get_port")]
        internal static extern uint webkit_security_origin_get_port(global::System.IntPtr securityOrigin);

        public uint Port{
            get{
                return webkit_security_origin_get_port(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API guint64webkit_security_origin_get_web_database_usage (WebKitSecurityOrigin* securityOrigin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_security_origin_get_web_database_usage")]
        internal static extern ulong webkit_security_origin_get_web_database_usage(global::System.IntPtr securityOrigin);

        public ulong WebDatabaseUsage { get{
            return webkit_security_origin_get_web_database_usage(this.Handle);
        } }

        // DEBUG: WEBKIT_API guint64webkit_security_origin_get_web_database_quota (WebKitSecurityOrigin* securityOrigin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_security_origin_get_web_database_quota")]
        internal static extern ulong webkit_security_origin_get_web_database_quota(global::System.IntPtr securityOrigin);

        public ulong WebDatabaseQuota{
            get{
                return webkit_security_origin_get_web_database_quota(this.Handle);
            }set{
                webkit_security_origin_set_web_database_quota(this.Handle,value);
            }
        }

        // DEBUG: WEBKIT_API void webkit_security_origin_set_web_database_quota (WebKitSecurityOrigin* securityOrigin, guint64 quota)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_security_origin_set_web_database_quota")]
        internal static extern void webkit_security_origin_set_web_database_quota(global::System.IntPtr securityOrigin, ulong quota);

        // DEBUG: WEBKIT_API GList *webkit_security_origin_get_all_web_databases (WebKitSecurityOrigin* securityOrigin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_security_origin_get_all_web_databases")]
        internal static extern global::System.IntPtr webkit_security_origin_get_all_web_databases(global::System.IntPtr securityOrigin);

        public GLib.List AllWebDatabases{
            get{
                return new GLib.List(webkit_security_origin_get_all_web_databases(this.Handle),this.Type);
            }
        }
    }
}
