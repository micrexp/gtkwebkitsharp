//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Webbed.Scripting.Interop
{
    // DEBUG: typedef struct _WebKitWebResourcePrivate WebKitWebResourcePrivate
    // DEBUG: struct _WebKitWebResourcePrivate
    [StructLayout(LayoutKind.Explicit, Size = 0)]
    public unsafe struct _WebKitWebResourcePrivate
    {
    }

    // DEBUG: struct _WebKitWebResource { GObject parent_instance; /*< private >*/ WebKitWebResourcePrivate *priv;}
    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public unsafe struct _WebKitWebResource
    {
        // DEBUG: GObject parent_instance
        [FieldOffset(0)]
        public _GObject parent_instance;

        // DEBUG: WebKitWebResourcePrivate *priv
        [FieldOffset(12)]
        public global::System.IntPtr priv;
    }

    // DEBUG: struct _WebKitWebResourceClass { GObjectClass parent_class; /* Padding for future expansion */ void (*_webkit_reserved0) (void); void (*_webkit_reserved1) (void); void (*_webkit_reserved2) (void); void (*_webkit_reserved3) (void);}
    [StructLayout(LayoutKind.Explicit, Size = 84)]
    public unsafe struct _WebKitWebResourceClass
    {
        // DEBUG: GObjectClass parent_class
        [FieldOffset(0)]
        public _GObjectClass parent_class;
    }

    public unsafe partial class WebKitWebResource: GLib.Object
    {
        public WebKitWebResource(IntPtr handle) : base(handle) { }
        // DEBUG: WEBKIT_API GTypewebkit_web_resource_get_type (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_resource_get_type")]
        internal static extern uint webkit_web_resource_get_type();

        public override GLib.GType Type
        {
            get
            {
                return new GLib.GType((IntPtr)webkit_web_resource_get_type());
            }
        }

        // DEBUG: WEBKIT_API WebKitWebResource *webkit_web_resource_new (const gchar *data, gssize size, const gchar *uri, const gchar *mime_type, const gchar *encoding, const gchar *frame_name)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet=CharSet.Ansi,
            EntryPoint="webkit_web_resource_new")]
        internal static extern global::System.IntPtr webkit_web_resource_new(string data, int size, string uri, string mime_type, string encoding, string frame_name);

        public WebKitWebResource(string data, int size, string uri, string mime_type, string encoding, string frame_name) : base(webkit_web_resource_new(data,size,uri, mime_type, encoding, frame_name)) { }

        // DEBUG: WEBKIT_API GString *webkit_web_resource_get_data (WebKitWebResource *web_resource)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_resource_get_data")]
        internal static extern string webkit_web_resource_get_data(global::System.IntPtr web_resource);

        public string Data
        {
            get
            {
                return GLib.GString.PtrToString(webkit_web_resource_get_data(this.Handle));
            }
        }

        // DEBUG: WEBKIT_API const gchar *webkit_web_resource_get_uri (WebKitWebResource *web_resource)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_resource_get_uri")]
        internal static extern string webkit_web_resource_get_uri(global::System.IntPtr web_resource);

        public string Uri
        {
            get
            {
                return webkit_web_resource_get_uri(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API const gchar *webkit_web_resource_get_mime_type (WebKitWebResource *web_resource)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_resource_get_mime_type")]
        internal static extern string webkit_web_resource_get_mime_type(global::System.IntPtr web_resource);

        public string MimeType
        {
            get
            {
                return webkit_web_resource_get_mime_type(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API const gchar *webkit_web_resource_get_encoding (WebKitWebResource *web_resource)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_resource_get_encoding")]
        internal static extern string webkit_web_resource_get_encoding(global::System.IntPtr web_resource);

        public string Encoding
        {
            get
            {
                return webkit_web_resource_get_mime_type(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API const gchar *webkit_web_resource_get_frame_name (WebKitWebResource *web_resource)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_resource_get_frame_name")]
        internal static extern string webkit_web_resource_get_frame_name(global::System.IntPtr web_resource);

        public string FrameName
        {
            get
            {
                return webkit_web_resource_get_frame_name(this.Handle);
            }
        }
    }
}
