//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Webbed.Scripting.Interop
{
    // DEBUG: enum { WEBKIT_CACHE_MODEL_DEFAULT, WEBKIT_CACHE_MODEL_DOCUMENT_VIEWER, WEBKIT_CACHE_MODEL_WEB_BROWSER, WEBKIT_CACHE_MODEL_DOCUMENT_BROWSER,}
    /// <summary>
    /// <para>WebKitCacheModel: _CACHE_MODEL_DEFAULT: The default cache model.
    /// This is WEBKIT_CACHE_MODEL_WEB_BROWSER. _CACHE_MODEL_DOCUMENT_VIEWER:
    /// Disable the cache completely, which substantially reduces memory usage.
    /// Useful for applications that only access a single local file, with no
    /// navigation to other pages. No remote resources will be cached.
    /// _CACHE_MODEL_DOCUMENT_BROWSER: A cache model optimized for viewing a series
    /// of local files -- for example, a documentation viewer or a website
    /// designer. WebKit will cache a moderate number of resources.
    /// _CACHE_MODEL_WEB_BROWSER: Improve document load speed substantially by
    /// caching a very large number of resources and previously viewed
    /// content.</para>
    /// </summary>
    /// <remarks>
    /// <para>/**</para>
    /// <para> * WebKitCacheModel:</para>
    /// <para> * @WEBKIT_CACHE_MODEL_DEFAULT: The default cache model. This
    /// is</para>
    /// <para> *   WEBKIT_CACHE_MODEL_WEB_BROWSER.</para>
    /// <para> * @WEBKIT_CACHE_MODEL_DOCUMENT_VIEWER: Disable the cache
    /// completely, which</para>
    /// <para> *   substantially reduces memory usage. Useful for applications
    /// that only</para>
    /// <para> *   access a single local file, with no navigation to other
    /// pages. No remote</para>
    /// <para> *   resources will be cached.</para>
    /// <para> * @WEBKIT_CACHE_MODEL_DOCUMENT_BROWSER: A cache model optimized
    /// for viewing</para>
    /// <para> *   a series of local files -- for example, a documentation
    /// viewer or a website</para>
    /// <para> *   designer. WebKit will cache a moderate number of
    /// resources.</para>
    /// <para> * @WEBKIT_CACHE_MODEL_WEB_BROWSER: Improve document load speed
    /// substantially</para>
    /// <para> *   by caching a very large number of resources and previously
    /// viewed content.</para>
    /// <para> *</para>
    /// <para> * Enum values used for determining the webview cache
    /// model.</para>
    /// <para> *</para>
    /// <para> **/</para>
    /// </remarks>
    // DEBUG: enum { WEBKIT_CACHE_MODEL_DEFAULT, WEBKIT_CACHE_MODEL_DOCUMENT_VIEWER, WEBKIT_CACHE_MODEL_WEB_BROWSER, WEBKIT_CACHE_MODEL_DOCUMENT_BROWSER,}
    public enum WebKitCacheModel
    {
        WEBKIT_CACHE_MODEL_DEFAULT = 0,
        WEBKIT_CACHE_MODEL_DOCUMENT_VIEWER = 1,
        WEBKIT_CACHE_MODEL_WEB_BROWSER = 2,
        WEBKIT_CACHE_MODEL_DOCUMENT_BROWSER = 3
    }

    // DEBUG: typedef enum { WEBKIT_CACHE_MODEL_DEFAULT, WEBKIT_CACHE_MODEL_DOCUMENT_VIEWER, WEBKIT_CACHE_MODEL_WEB_BROWSER, WEBKIT_CACHE_MODEL_DOCUMENT_BROWSER,} WebKitCacheModel
    public unsafe partial class WebkitGlobals
    {
        // DEBUG: WEBKIT_API SoupSession*webkit_get_default_session (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_get_default_session")]
        internal static extern global::System.IntPtr webkit_get_default_session();

        public static SoupSession DefaultSession
        {
            return new  SoupSession(webkit_get_default_session());
        }

        // DEBUG: WEBKIT_API WebKitWebPluginDatabase *webkit_get_web_plugin_database (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_get_web_plugin_database")]
        internal static extern global::System.IntPtr webkit_get_web_plugin_database();

        public static WebKitWebPluginDatabase WebPluginDatabase{
            get{
                return new WebKitWebPluginDatabase(webkit_get_web_plugin_database());
            }
        }

        // DEBUG: WEBKIT_API WebKitIconDatabase *webkit_get_icon_database (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_get_icon_database")]
        internal static extern global::System.IntPtr webkit_get_icon_database();

        public static WebKitIconDatabase GetIconDatabse(){
            return new WebKitIconDatabase(webkit_get_icon_database());
        }

        // DEBUG: WEBKIT_API WebKitFaviconDatabase *webkit_get_favicon_database (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_get_favicon_database")]
        internal static extern global::System.IntPtr webkit_get_favicon_database();

        public static WebKitFaviconDatabase GetIconDatabse(){
            return new WebKitFaviconDatabase(webkit_get_favicon_database());
        }

        // DEBUG: WEBKIT_API voidwebkit_set_cache_model (WebKitCacheModel cache_model)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_set_cache_model")]
        internal static extern void webkit_set_cache_model(WebKitCacheModel cache_model);

         public static WebKitCacheModel CacheModel{
             set{
                 webkit_set_cache_model(cache_model);
             }
             get{
                 return webkit_get_cache_model();
             }
        }

        // DEBUG: WEBKIT_API WebKitCacheModelwebkit_get_cache_model (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_get_cache_model")]
        internal static extern WebKitCacheModel webkit_get_cache_model();
               
        // DEBUG: WEBKIT_API GObject*webkit_get_text_checker (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_get_text_checker")]
        internal static extern global::System.IntPtr webkit_get_text_checker();

        public GLib.Object TextChecker{
            get{
                return new GLib.Object(webkit_get_text_checker());
            }
            set{
                webkit_set_text_checker(value.Handle);
            }
        }

        // DEBUG: WEBKIT_API voidwebkit_set_text_checker (GObject* checker)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_set_text_checker")]
        internal static extern void webkit_set_text_checker(global::System.IntPtr checker);
    }
}
