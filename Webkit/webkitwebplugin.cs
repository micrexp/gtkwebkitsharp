//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Webbed.Scripting.Interop
{
    // DEBUG: typedef struct _WebKitWebPluginPrivate WebKitWebPluginPrivate
    // DEBUG: typedef struct _WebKitWebPluginMIMEType { char* name; char* description; char** extensions;} WebKitWebPluginMIMEType
    // DEBUG: struct _WebKitWebPluginPrivate
    [StructLayout(LayoutKind.Explicit, Size = 0)]
    public unsafe struct _WebKitWebPluginPrivate
    {
    }

    // DEBUG: struct _WebKitWebPluginMIMEType { char* name; char* description; char** extensions;}
    /// <summary>
    /// <para>WebKitWebPluginMIMEType: : the description of the MIME type. : a
    /// %NULL-terminated array with the extensions associated with this MIME
    /// type.</para>
    /// </summary>
    /// <remarks>
    /// <para>/**</para>
    /// <para> * WebKitWebPluginMIMEType:</para>
    /// <para> * @name: the name of the MIME type.</para>
    /// <para> * @description: the description of the MIME type.</para>
    /// <para> * @extensions: a %NULL-terminated array with the
    /// extensions</para>
    /// <para> * associated with this MIME type.</para>
    /// <para> *</para>
    /// <para> * A structure representing one of the MIME types associated with
    /// a</para>
    /// <para> * plugin. A #GSList of these objects will be returned by</para>
    /// <para> * #webkit_web_plugin_get_mimetypes, use</para>
    /// <para> * #webkit_web_plugin_mime_type_list_free to free it.</para>
    /// <para> *</para>
    /// <para> * Since: 1.3.8</para>
    /// <para> */</para>
    /// </remarks>
    // DEBUG: struct _WebKitWebPluginMIMEType { char* name; char* description; char** extensions;}
    [StructLayout(LayoutKind.Explicit, Size = 12)]
    public unsafe struct _WebKitWebPluginMIMEType
    {
        // DEBUG: char* name
        [FieldOffset(0)]
        public sbyte* name;

        // DEBUG: char* description
        [FieldOffset(4)]
        public sbyte* description;

        // DEBUG: char** extensions
        [FieldOffset(8)]
        public sbyte** extensions;
    }

    // DEBUG: struct _WebKitWebPluginClass { GObjectClass parentClass;}
    [StructLayout(LayoutKind.Explicit, Size = 68)]
    public unsafe struct _WebKitWebPluginClass
    {
        // DEBUG: GObjectClass parentClass
        [FieldOffset(0)]
        public _GObjectClass parentClass;
    }

    // DEBUG: struct _WebKitWebPlugin { GObject parentInstance; WebKitWebPluginPrivate* priv;}
    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public unsafe struct _WebKitWebPlugin
    {
        // DEBUG: GObject parentInstance
        [FieldOffset(0)]
        public _GObject parentInstance;

        // DEBUG: WebKitWebPluginPrivate* priv
        [FieldOffset(12)]
        public global::System.IntPtr priv;
    }

    public unsafe partial class WebKitWebPlugin : GLib.Object
    {
        public WebKitWebPlugin(IntPtr handle) : base(handle) { }
        // DEBUG: WEBKIT_API GTypewebkit_web_plugin_get_type (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_plugin_get_type")]
        internal static extern uint webkit_web_plugin_get_type();

        public override GLib.GType Type
        {
            get
            {
                return new GLib.GType((IntPtr)webkit_web_plugin_get_type());
            }
        }

        // DEBUG: WEBKIT_API const char*webkit_web_plugin_get_name (WebKitWebPlugin *plugin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet=CharSet.Ansi,
            EntryPoint="webkit_web_plugin_get_name")]
        internal static extern global::System.IntPtr webkit_web_plugin_get_name(global::System.IntPtr plugin);

        public string Name{
            get{
                return webkit_web_plugin_get_name(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API const char*webkit_web_plugin_get_description (WebKitWebPlugin *plugin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet=CharSet.Ansi,
            EntryPoint="webkit_web_plugin_get_description")]
        internal static extern global::System.IntPtr webkit_web_plugin_get_description(global::System.IntPtr plugin);

        public string Description{
            get{
                return webkit_web_plugin_get_description(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API const char*webkit_web_plugin_get_path (WebKitWebPlugin *plugin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,CharSet=CharSet.Ansi,
            EntryPoint="webkit_web_plugin_get_path")]
        internal static extern string webkit_web_plugin_get_path(global::System.IntPtr plugin);

        public string Path{
            get{
                return webkit_web_plugin_get_path(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API GSList*webkit_web_plugin_get_mimetypes (WebKitWebPlugin *plugin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,CharSet=CharSet.Ansi,
            EntryPoint="webkit_web_plugin_get_mimetypes")]
        internal static extern global::System.IntPtr webkit_web_plugin_get_mimetypes(global::System.IntPtr plugin);

        public GLib.List MimeTypes{
            get{
                return new GLib.List(webkit_web_plugin_get_mimetypes(this.Handle));
            }
        }

        // DEBUG: WEBKIT_API voidwebkit_web_plugin_set_enabled (WebKitWebPlugin *plugin, gboolean enabled)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_plugin_set_enabled")]
        internal static extern void webkit_web_plugin_set_enabled(global::System.IntPtr plugin, bool enabled);

        public bool Enabled{
            set{
                webkit_web_plugin_set_enabled(this.Handle, value);
            }get{
                return webkit_web_plugin_get_enabled(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API gbooleanwebkit_web_plugin_get_enabled (WebKitWebPlugin *plugin)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_plugin_get_enabled")]
        internal static extern bool webkit_web_plugin_get_enabled(global::System.IntPtr plugin);
    }
}
