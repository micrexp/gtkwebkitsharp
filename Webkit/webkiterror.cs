//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Webbed.Scripting.Interop
{
    // DEBUG: enum { WEBKIT_NETWORK_ERROR_FAILED = 399, WEBKIT_NETWORK_ERROR_TRANSPORT = 300, WEBKIT_NETWORK_ERROR_UNKNOWN_PROTOCOL = 301, WEBKIT_NETWORK_ERROR_CANCELLED = 302, WEBKIT_NETWORK_ERROR_FILE_DOES_NOT_EXIST = 303,}
    /// <summary>
    /// <para>WebKitNetworkError: _NETWORK_ERROR_FAILED: Generic load failure
    /// _NETWORK_ERROR_TRANSPORT: Load failure due to transport error
    /// _NETWORK_ERROR_UNKNOWN_PROTOCOL: Load failure due to unknown protocol
    /// _NETWORK_ERROR_CANCELLED: Load failure due to cancellation
    /// _NETWORK_ERROR_FILE_DOES_NOT_EXIST: Load failure due to missing file</para>
    /// </summary>
    /// <remarks>
    /// <para>/**</para>
    /// <para> * WebKitNetworkError:</para>
    /// <para> * @WEBKIT_NETWORK_ERROR_FAILED: Generic load failure</para>
    /// <para> * @WEBKIT_NETWORK_ERROR_TRANSPORT: Load failure due to transport
    /// error</para>
    /// <para> * @WEBKIT_NETWORK_ERROR_UNKNOWN_PROTOCOL: Load failure due to
    /// unknown protocol</para>
    /// <para> * @WEBKIT_NETWORK_ERROR_CANCELLED: Load failure due to
    /// cancellation</para>
    /// <para> * @WEBKIT_NETWORK_ERROR_FILE_DOES_NOT_EXIST: Load failure due to
    /// missing file</para>
    /// <para> *</para>
    /// <para> * Enum values used to denote the various network errors.</para>
    /// <para> **/</para>
    /// </remarks>
    // DEBUG: enum { WEBKIT_NETWORK_ERROR_FAILED = 399, WEBKIT_NETWORK_ERROR_TRANSPORT = 300, WEBKIT_NETWORK_ERROR_UNKNOWN_PROTOCOL = 301, WEBKIT_NETWORK_ERROR_CANCELLED = 302, WEBKIT_NETWORK_ERROR_FILE_DOES_NOT_EXIST = 303,}
    public enum WebKitNetworkError
    {
        WEBKIT_NETWORK_ERROR_FAILED = 399,
        WEBKIT_NETWORK_ERROR_TRANSPORT = 300,
        WEBKIT_NETWORK_ERROR_UNKNOWN_PROTOCOL = 301,
        WEBKIT_NETWORK_ERROR_CANCELLED = 302,
        WEBKIT_NETWORK_ERROR_FILE_DOES_NOT_EXIST = 303
    }

    // DEBUG: enum { WEBKIT_POLICY_ERROR_FAILED = 199, WEBKIT_POLICY_ERROR_CANNOT_SHOW_MIME_TYPE = 100, WEBKIT_POLICY_ERROR_CANNOT_SHOW_URL = 101, WEBKIT_POLICY_ERROR_FRAME_LOAD_INTERRUPTED_BY_POLICY_CHANGE = 102, WEBKIT_POLICY_ERROR_CANNOT_USE_RESTRICTED_PORT = 103,}
    /// <summary>
    /// <para>WebKitPolicyError: _POLICY_ERROR_FAILED: Generic load failure due
    /// to policy error _POLICY_ERROR_CANNOT_SHOW_MIME_TYPE: Load failure due to
    /// unsupported mime type _POLICY_ERROR_CANNOT_SHOW_URL: Load failure due to
    /// URI that can not be shown
    /// _POLICY_ERROR_FRAME_LOAD_INTERRUPTED_BY_POLICY_CHANGE: Load failure due to
    /// frame load interruption by policy change
    /// _POLICY_ERROR_CANNOT_USE_RESTRICTED_PORT: Load failure due to port
    /// restriction</para>
    /// </summary>
    /// <remarks>
    /// <para>/**</para>
    /// <para> * WebKitPolicyError:</para>
    /// <para> * @WEBKIT_POLICY_ERROR_FAILED: Generic load failure due to
    /// policy error</para>
    /// <para> * @WEBKIT_POLICY_ERROR_CANNOT_SHOW_MIME_TYPE: Load failure due
    /// to unsupported mime type</para>
    /// <para> * @WEBKIT_POLICY_ERROR_CANNOT_SHOW_URL: Load failure due to URI
    /// that can not be shown</para>
    /// <para> * @WEBKIT_POLICY_ERROR_FRAME_LOAD_INTERRUPTED_BY_POLICY_CHANGE:
    /// Load failure due to frame load interruption by policy change</para>
    /// <para> * @WEBKIT_POLICY_ERROR_CANNOT_USE_RESTRICTED_PORT: Load failure
    /// due to port restriction</para>
    /// <para> *</para>
    /// <para> * Enum values used to denote the various policy errors.</para>
    /// <para> **/</para>
    /// </remarks>
    // DEBUG: enum { WEBKIT_POLICY_ERROR_FAILED = 199, WEBKIT_POLICY_ERROR_CANNOT_SHOW_MIME_TYPE = 100, WEBKIT_POLICY_ERROR_CANNOT_SHOW_URL = 101, WEBKIT_POLICY_ERROR_FRAME_LOAD_INTERRUPTED_BY_POLICY_CHANGE = 102, WEBKIT_POLICY_ERROR_CANNOT_USE_RESTRICTED_PORT = 103,}
    public enum WebKitPolicyError
    {
        WEBKIT_POLICY_ERROR_FAILED = 199,
        WEBKIT_POLICY_ERROR_CANNOT_SHOW_MIME_TYPE = 100,
        WEBKIT_POLICY_ERROR_CANNOT_SHOW_URL = 101,
        WEBKIT_POLICY_ERROR_FRAME_LOAD_INTERRUPTED_BY_POLICY_CHANGE = 102,
        WEBKIT_POLICY_ERROR_CANNOT_USE_RESTRICTED_PORT = 103
    }

    // DEBUG: enum { WEBKIT_PLUGIN_ERROR_FAILED = 299, WEBKIT_PLUGIN_ERROR_CANNOT_FIND_PLUGIN = 200, WEBKIT_PLUGIN_ERROR_CANNOT_LOAD_PLUGIN = 201, WEBKIT_PLUGIN_ERROR_JAVA_UNAVAILABLE = 202, WEBKIT_PLUGIN_ERROR_CONNECTION_CANCELLED = 203, WEBKIT_PLUGIN_ERROR_WILL_HANDLE_LOAD = 204,}
    /// <summary>
    /// <para>WebKitPluginError: _PLUGIN_ERROR_FAILED: Generic plugin load
    /// failure _PLUGIN_ERROR_CANNOT_FIND_PLUGIN: Load failure due to missing
    /// plugin _PLUGIN_ERROR_CANNOT_LOAD_PLUGIN: Load failure due to inability to
    /// load plugin _PLUGIN_ERROR_JAVA_UNAVAILABLE: Load failue due to missing Java
    /// support that is required to load plugin _PLUGIN_ERROR_CONNECTION_CANCELLED:
    /// Load failure due to connection cancellation _PLUGIN_ERROR_WILL_HANDLE_LOAD:
    /// Load failure since plugin handles the load</para>
    /// </summary>
    /// <remarks>
    /// <para>/**</para>
    /// <para> * WebKitPluginError:</para>
    /// <para> * @WEBKIT_PLUGIN_ERROR_FAILED: Generic plugin load
    /// failure</para>
    /// <para> * @WEBKIT_PLUGIN_ERROR_CANNOT_FIND_PLUGIN: Load failure due to
    /// missing plugin</para>
    /// <para> * @WEBKIT_PLUGIN_ERROR_CANNOT_LOAD_PLUGIN: Load failure due to
    /// inability to load plugin</para>
    /// <para> * @WEBKIT_PLUGIN_ERROR_JAVA_UNAVAILABLE: Load failue due to
    /// missing Java support that is required to load plugin</para>
    /// <para> * @WEBKIT_PLUGIN_ERROR_CONNECTION_CANCELLED: Load failure due to
    /// connection cancellation</para>
    /// <para> * @WEBKIT_PLUGIN_ERROR_WILL_HANDLE_LOAD: Load failure since
    /// plugin handles the load</para>
    /// <para> *</para>
    /// <para> * Enum values used to denote the various plugin errors.</para>
    /// <para> **/</para>
    /// </remarks>
    // DEBUG: enum { WEBKIT_PLUGIN_ERROR_FAILED = 299, WEBKIT_PLUGIN_ERROR_CANNOT_FIND_PLUGIN = 200, WEBKIT_PLUGIN_ERROR_CANNOT_LOAD_PLUGIN = 201, WEBKIT_PLUGIN_ERROR_JAVA_UNAVAILABLE = 202, WEBKIT_PLUGIN_ERROR_CONNECTION_CANCELLED = 203, WEBKIT_PLUGIN_ERROR_WILL_HANDLE_LOAD = 204,}
    public enum WebKitPluginError
    {
        WEBKIT_PLUGIN_ERROR_FAILED = 299,
        WEBKIT_PLUGIN_ERROR_CANNOT_FIND_PLUGIN = 200,
        WEBKIT_PLUGIN_ERROR_CANNOT_LOAD_PLUGIN = 201,
        WEBKIT_PLUGIN_ERROR_JAVA_UNAVAILABLE = 202,
        WEBKIT_PLUGIN_ERROR_CONNECTION_CANCELLED = 203,
        WEBKIT_PLUGIN_ERROR_WILL_HANDLE_LOAD = 204
    }

    // DEBUG: typedef enum { WEBKIT_NETWORK_ERROR_FAILED = 399, WEBKIT_NETWORK_ERROR_TRANSPORT = 300, WEBKIT_NETWORK_ERROR_UNKNOWN_PROTOCOL = 301, WEBKIT_NETWORK_ERROR_CANCELLED = 302, WEBKIT_NETWORK_ERROR_FILE_DOES_NOT_EXIST = 303,} WebKitNetworkError
    // DEBUG: typedef enum { WEBKIT_POLICY_ERROR_FAILED = 199, WEBKIT_POLICY_ERROR_CANNOT_SHOW_MIME_TYPE = 100, WEBKIT_POLICY_ERROR_CANNOT_SHOW_URL = 101, WEBKIT_POLICY_ERROR_FRAME_LOAD_INTERRUPTED_BY_POLICY_CHANGE = 102, WEBKIT_POLICY_ERROR_CANNOT_USE_RESTRICTED_PORT = 103,} WebKitPolicyError
    // DEBUG: typedef enum { WEBKIT_PLUGIN_ERROR_FAILED = 299, WEBKIT_PLUGIN_ERROR_CANNOT_FIND_PLUGIN = 200, WEBKIT_PLUGIN_ERROR_CANNOT_LOAD_PLUGIN = 201, WEBKIT_PLUGIN_ERROR_JAVA_UNAVAILABLE = 202, WEBKIT_PLUGIN_ERROR_CONNECTION_CANCELLED = 203, WEBKIT_PLUGIN_ERROR_WILL_HANDLE_LOAD = 204,} WebKitPluginError
    public unsafe partial class WebkitError
    {
        // DEBUG: WEBKIT_API GQuarkwebkit_network_error_quark (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_network_error_quark")]
        internal static extern uint webkit_network_error_quark();

        public static uint NetworkError
        {
            get
            {
                return webkit_network_error_quark();
            }
        }

        // DEBUG: WEBKIT_API GQuarkwebkit_policy_error_quark (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_policy_error_quark")]
        internal static extern uint webkit_policy_error_quark();

        public static uint PolicyError
        {
            get
            {
                return webkit_policy_error_quark();
            }
        }

        // DEBUG: WEBKIT_API GQuarkwebkit_plugin_error_quark (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_plugin_error_quark")]
        internal static extern uint webkit_plugin_error_quark();

        public static uint PluginError
        {
            get
            {
                return webkit_plugin_error_quark();
            }
        }
    }
}
