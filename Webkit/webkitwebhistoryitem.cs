//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace Webbed.Scripting.Interop
{
    // DEBUG: typedef struct _WebKitWebHistoryItemPrivate WebKitWebHistoryItemPrivate
    // DEBUG: struct _WebKitWebHistoryItemPrivate
    [StructLayout(LayoutKind.Explicit, Size = 0)]
    public unsafe struct _WebKitWebHistoryItemPrivate
    {
    }

    // DEBUG: struct _WebKitWebHistoryItem { GObject parent_instance; /*< private >*/ WebKitWebHistoryItemPrivate *priv;}
    [StructLayout(LayoutKind.Explicit, Size = 16)]
    public unsafe struct _WebKitWebHistoryItem
    {
        // DEBUG: GObject parent_instance
        [FieldOffset(0)]
        public _GObject parent_instance;

        // DEBUG: WebKitWebHistoryItemPrivate *priv
        [FieldOffset(12)]
        public global::System.IntPtr priv;
    }

    // DEBUG: struct _WebKitWebHistoryItemClass { GObjectClass parent_class; /* Padding for future expansion */ void (*_webkit_reserved0) (void); void (*_webkit_reserved1) (void); void (*_webkit_reserved2) (void); void (*_webkit_reserved3) (void);}
    [StructLayout(LayoutKind.Explicit, Size = 84)]
    public unsafe struct _WebKitWebHistoryItemClass
    {
        // DEBUG: GObjectClass parent_class
        [FieldOffset(0)]
        public _GObjectClass parent_class;
    }

    public unsafe partial class WebKitWebHistoryItem : GLib.Object
    {
        public WebKitWebHistoryItem(IntPtr handle) : base(handle) { }
        // DEBUG: WEBKIT_API GTypewebkit_web_history_item_get_type (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_history_item_get_type")]
        internal static extern uint webkit_web_history_item_get_type();

        public override GLib.GType Type
        {
            get
            {
                return new GLib.GType((IntPtr)webkit_web_history_item_get_type());
            }
        }

        // DEBUG: WEBKIT_API WebKitWebHistoryItem *webkit_web_history_item_new (void)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_history_item_new")]
        internal static extern global::System.IntPtr webkit_web_history_item_new();

        public WebKitWebHistoryItem() : base(webkit_web_history_item_new()) { }

        // DEBUG: WEBKIT_API WebKitWebHistoryItem *webkit_web_history_item_new_with_data (const gchar *uri, const gchar *title)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet=CharSet.Ansi,
            EntryPoint="webkit_web_history_item_new_with_data")]
        internal static extern global::System.IntPtr webkit_web_history_item_new_with_data(string uri, string title);

        public WebKitWebHistoryItem(string uri, string title) : base(webkit_web_history_item_new_with_data(uri, title)) { }

        // DEBUG: WEBKIT_API const gchar *webkit_web_history_item_get_title (WebKitWebHistoryItem *web_history_item)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_history_item_get_title")]
        internal static extern string webkit_web_history_item_get_title(global::System.IntPtr web_history_item);

        public string Title{
            get{
                return webkit_web_history_item_get_title(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API const gchar *webkit_web_history_item_get_alternate_title (WebKitWebHistoryItem *web_history_item)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_history_item_get_alternate_title")]
        internal static extern string webkit_web_history_item_get_alternate_title(global::System.IntPtr web_history_item);

        public string AlternateTitle
        {
            get
            {
                return webkit_web_history_item_get_alternate_title(this.Handle);
            }
            set
            {
                webkit_web_history_item_set_alternate_title(this.Handle, value);
            }
        }

        // DEBUG: WEBKIT_API voidwebkit_web_history_item_set_alternate_title (WebKitWebHistoryItem *web_history_item, const gchar *title)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_history_item_set_alternate_title")]
        internal static extern void webkit_web_history_item_set_alternate_title(global::System.IntPtr web_history_item, string title);

        // DEBUG: WEBKIT_API const gchar *webkit_web_history_item_get_uri (WebKitWebHistoryItem *web_history_item)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_history_item_get_uri")]
        internal static extern string webkit_web_history_item_get_uri(global::System.IntPtr web_history_item);

        public string Uri
        {
            get
            {
                webkit_web_history_item_get_uri(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API const gchar *webkit_web_history_item_get_original_uri (WebKitWebHistoryItem *web_history_item)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl, CharSet = CharSet.Ansi,
            EntryPoint="webkit_web_history_item_get_original_uri")]
        internal static extern global::System.IntPtr webkit_web_history_item_get_original_uri(global::System.IntPtr web_history_item);

        public string OriginalUri
        {
            get
            {
                return webkit_web_history_item_get_original_uri(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API gdoublewebkit_web_history_item_get_last_visited_time (WebKitWebHistoryItem *web_history_item)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_history_item_get_last_visited_time")]
        internal static extern double webkit_web_history_item_get_last_visited_time(global::System.IntPtr web_history_item);

        public double LastVisitedTime
        {
            get
            {
                return webkit_web_history_item_get_last_visited_time(this.Handle);
            }
        }

        // DEBUG: WEBKIT_API WebKitWebHistoryItem*webkit_web_history_item_copy (WebKitWebHistoryItem *web_history_item)
        [SuppressUnmanagedCodeSecurity]
        [DllImport("webkitgtk-1.0", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="webkit_web_history_item_copy")]
        internal static extern global::System.IntPtr webkit_web_history_item_copy(global::System.IntPtr web_history_item);

        public WebKitWebHistoryItem Copy()
        {
            return new WebKitWebHistoryItem(webkit_web_history_item_copy(this.Handle));
        }
    }
}
